{"expireTime":9007200870642030000,"key":"transformer-remark-markdown-ast-522fddb5e6c906f76083470d5fc2d9a1-gatsby-remark-embed-snippetgatsby-remark-prismjsgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":{"type":"root","children":[{"type":"paragraph","children":[{"type":"text","value":"SDL is a language to write GRAPHQL SCHEMA.","position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":43,"offset":43},"indent":[]}}],"position":{"start":{"line":2,"column":1,"offset":1},"end":{"line":2,"column":43,"offset":43},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Type\nIt has name and can implement one or more interfaces","position":{"start":{"line":4,"column":3,"offset":47},"end":{"line":5,"column":55,"offset":106},"indent":[3]}}],"position":{"start":{"line":4,"column":3,"offset":47},"end":{"line":5,"column":55,"offset":106},"indent":[3]}}],"position":{"start":{"line":4,"column":1,"offset":45},"end":{"line":5,"column":55,"offset":106},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">type Post implements Item {\n\n}</code></pre></div>","position":{"start":{"line":7,"column":1,"offset":108},"end":{"line":11,"column":4,"offset":146},"indent":[1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Fields\nA field has a name and type:","position":{"start":{"line":13,"column":3,"offset":150},"end":{"line":14,"column":31,"offset":187},"indent":[3]}}],"position":{"start":{"line":13,"column":3,"offset":150},"end":{"line":14,"column":31,"offset":187},"indent":[3]}}],"position":{"start":{"line":13,"column":1,"offset":148},"end":{"line":14,"column":31,"offset":187},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">age: Int</code></pre></div>","position":{"start":{"line":16,"column":1,"offset":189},"end":{"line":18,"column":4,"offset":205},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"The built in scaler types are:\nInt, Float, String, Boolean, ID","position":{"start":{"line":20,"column":1,"offset":207},"end":{"line":21,"column":32,"offset":269},"indent":[1]}}],"position":{"start":{"line":20,"column":1,"offset":207},"end":{"line":21,"column":32,"offset":269},"indent":[1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Non-nullable fields are denoted by exclamation mark:","position":{"start":{"line":23,"column":3,"offset":273},"end":{"line":23,"column":55,"offset":325},"indent":[]}}],"position":{"start":{"line":23,"column":3,"offset":273},"end":{"line":23,"column":55,"offset":325},"indent":[]}}],"position":{"start":{"line":23,"column":1,"offset":271},"end":{"line":23,"column":55,"offset":325},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">age: Int!</code></pre></div>","position":{"start":{"line":25,"column":1,"offset":327},"end":{"line":27,"column":4,"offset":344},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Lists are denoted by square brackets:","position":{"start":{"line":29,"column":1,"offset":346},"end":{"line":29,"column":38,"offset":383},"indent":[]}}],"position":{"start":{"line":29,"column":1,"offset":346},"end":{"line":29,"column":38,"offset":383},"indent":[]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">names: [String!]</code></pre></div>","position":{"start":{"line":31,"column":1,"offset":385},"end":{"line":33,"column":4,"offset":409},"indent":[1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Enum\nEnum is a scalar value that has a specified set of possible values:","position":{"start":{"line":35,"column":3,"offset":413},"end":{"line":36,"column":70,"offset":487},"indent":[3]}}],"position":{"start":{"line":35,"column":3,"offset":413},"end":{"line":36,"column":70,"offset":487},"indent":[3]}}],"position":{"start":{"line":35,"column":1,"offset":411},"end":{"line":36,"column":70,"offset":487},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">enum Category {\n    PROGRAMMING_LANGUAGES\n    API_DESIGN\n}</code></pre></div>","position":{"start":{"line":38,"column":1,"offset":489},"end":{"line":43,"column":4,"offset":555},"indent":[1,1,1,1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Interface\nInterface is a list of fields.\nType must have the same fields all the interface it implements and all interface fields must be of same type.","position":{"start":{"line":45,"column":3,"offset":559},"end":{"line":47,"column":112,"offset":713},"indent":[3,3]}}],"position":{"start":{"line":45,"column":3,"offset":559},"end":{"line":47,"column":112,"offset":713},"indent":[3,3]}}],"position":{"start":{"line":45,"column":1,"offset":557},"end":{"line":47,"column":112,"offset":713},"indent":[1,1]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Schema directive\nA directive allows you to attach arbitary information to any other schema definition element","position":{"start":{"line":49,"column":3,"offset":717},"end":{"line":50,"column":95,"offset":828},"indent":[3]}}],"position":{"start":{"line":49,"column":3,"offset":717},"end":{"line":50,"column":95,"offset":828},"indent":[3]}}],"position":{"start":{"line":49,"column":1,"offset":715},"end":{"line":50,"column":95,"offset":828},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">name: String! @defaultValue(value:&quot;blogpost&quot;)</code></pre></div>","position":{"start":{"line":52,"column":1,"offset":830},"end":{"line":54,"column":4,"offset":883},"indent":[1,1]}},{"type":"paragraph","children":[{"type":"text","value":"Each GRAPHQL implementation can define their own custom directives that add new functionality.","position":{"start":{"line":56,"column":1,"offset":885},"end":{"line":56,"column":95,"offset":979},"indent":[]}}],"position":{"start":{"line":56,"column":1,"offset":885},"end":{"line":56,"column":95,"offset":979},"indent":[]}},{"type":"blockquote","children":[{"type":"paragraph","children":[{"type":"text","value":"Here is an example of GraphQL Schema:\nSchema consist of base types(data models) and GraphQL operations like query fetching data, mutuation for creating and deleting data; and subscription for changes in real time","position":{"start":{"line":58,"column":3,"offset":983},"end":{"line":59,"column":177,"offset":1197},"indent":[3]}}],"position":{"start":{"line":58,"column":3,"offset":983},"end":{"line":59,"column":177,"offset":1197},"indent":[3]}}],"position":{"start":{"line":58,"column":1,"offset":981},"end":{"line":59,"column":177,"offset":1197},"indent":[1]}},{"type":"html","lang":null,"meta":null,"value":"<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># base type\ntype todo{\n    id:ID\n    name: String\n    completed:Boolean\n}\n# Query definitions\ntype Query {\n    getTodo(id:ID): Todo\n    listTodos: [Todo]\n}\n# Mutation definitions\ntype Mutation {\n    createTodo(input: Todo): Todo\n}\n\n# Subscription definitions\ntype Subscriptions{\n    onCreateTodo: Todo\n}</code></pre></div>","position":{"start":{"line":61,"column":1,"offset":1199},"end":{"line":82,"column":4,"offset":1510},"indent":[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]}}],"position":{"start":{"line":1,"column":1,"offset":0},"end":{"line":83,"column":1,"offset":1511}}}}