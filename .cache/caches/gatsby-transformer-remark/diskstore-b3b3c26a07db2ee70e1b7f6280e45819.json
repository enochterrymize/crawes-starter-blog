{"expireTime":9007200870652028000,"key":"transformer-remark-markdown-html-522fddb5e6c906f76083470d5fc2d9a1-gatsby-remark-embed-snippetgatsby-remark-prismjsgatsby-remark-imagesgatsby-remark-responsive-iframegatsby-remark-prismjsgatsby-remark-copy-linked-filesgatsby-remark-smartypants-","val":"<p>SDL is a language to write GRAPHQL SCHEMA.</p>\n<blockquote>\n<p>Type\nIt has name and can implement one or more interfaces</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">type Post implements Item {\n\n}</code></pre></div>\n<blockquote>\n<p>Fields\nA field has a name and type:</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">age: Int</code></pre></div>\n<p>The built in scaler types are:\nInt, Float, String, Boolean, ID</p>\n<blockquote>\n<p>Non-nullable fields are denoted by exclamation mark:</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">age: Int!</code></pre></div>\n<p>Lists are denoted by square brackets:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">names: [String!]</code></pre></div>\n<blockquote>\n<p>Enum\nEnum is a scalar value that has a specified set of possible values:</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">enum Category {\n    PROGRAMMING_LANGUAGES\n    API_DESIGN\n}</code></pre></div>\n<blockquote>\n<p>Interface\nInterface is a list of fields.\nType must have the same fields all the interface it implements and all interface fields must be of same type.</p>\n</blockquote>\n<blockquote>\n<p>Schema directive\nA directive allows you to attach arbitary information to any other schema definition element</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">name: String! @defaultValue(value:&quot;blogpost&quot;)</code></pre></div>\n<p>Each GRAPHQL implementation can define their own custom directives that add new functionality.</p>\n<blockquote>\n<p>Here is an example of GraphQL Schema:\nSchema consist of base types(data models) and GraphQL operations like query fetching data, mutuation for creating and deleting data; and subscription for changes in real time</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># base type\ntype todo{\n    id:ID\n    name: String\n    completed:Boolean\n}\n# Query definitions\ntype Query {\n    getTodo(id:ID): Todo\n    listTodos: [Todo]\n}\n# Mutation definitions\ntype Mutation {\n    createTodo(input: Todo): Todo\n}\n\n# Subscription definitions\ntype Subscriptions{\n    onCreateTodo: Todo\n}</code></pre></div>"}